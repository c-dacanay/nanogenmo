import random
a = ["amber", "anchor", "anger", "apple", "argyle", "armor", "bacon", "arrow", "badger", "ballast", "balsam", "bantam", "barber", "barley", "barrow", "basil", "basin", "basket", "battle", "beauty", "bedroom", "beetle", "beggar", "berry", "birdcage", "bishop", "blossom", "bluebird", "blueprint", "bonnet", "bourbon", "breakfast", "brother", "bubble", "bucket", "buoy", "burlap", "butler", "butter", "button", "cabbage", "cable", "cactus", "camphor", "candle", "cannon", "canvas", "captain", "caption", "carrot", "castle", "cattle", "cedar", "cellar", "channel", "cheddar", "cherry", "chicken", "children", "cider", "cipher", "circle", "clover", "cobalt", "cobweb", "cocoa", "coil", "colonel", "column", "compass", "copper", "cotton", "country", "cracker", "creature", "cycle", "daisy", "danger", "daughter", "denim", "diamond", "dinner", "doctor", "dollar", "donkey", "dovetail", "dutchess", "eagle", "earthquake", "empress", "engine", "family", "father", "faucet", "favor", "feather", "fiddle", "fiddler", "flower", "fortune", "freckle", "galley", "gannet", "garnet", "gingham", "goblin", "goldfish", "hammer", "hazel", "heather", "hobby", "holly", "honey", "jackal", "jacket", "jewel", "justice", "kerning", "lady", "lawyer", "leather", "leopard", "letter", "lettuce", "linen", "lion", "lobster", "locket", "lumber", "magic", "marble", "market", "marlin",
     "marrow", "mayor", "mitre", "mitten", "money", "morning", "mortar", "mother", "mountain", "mushroom", "music", "nation", "needle", "nickel", "notebook", "novel", "number", "nutmeg", "oatmeal", "ocean", "opal", "owl", "oxen", "paintbrush", "painter", "paper", "parcel", "parent", "parsley", "pebble", "pencil", "penny", "pepper", "pickle", "picture", "pistol", "pocket", "poem", "poison", "porter", "potter", "pulley", "quicksand", "quiet", "quiver", "rabbit", "railway", "rainstorm", "riddle", "rifle", "river", "robin", "sailor", "salmon", "sandstone", "beacon", "satin", "sawdust", "scarecrow", "seashore", "selvage", "serif", "shadow", "sherry", "shipwright", "shovel", "spider", "spigot", "spindle", "sprocket", "spyglass", "station", "stranger", "sugar", "summer", "sweater", "table", "tailor", "tanner", "tartan", "temper", "tempest", "temple", "tiger", "tinker", "toadstool", "tower", "trilby", "trousers", "tulip", "turkey", "uncle", "vapor", "vellum", "velvet", "victim", "village", "violet", "viper", "virtue", "vodka", "voyage", "waistcoat", "water", "weather", "whiskey", "whistle", "windmill", "winter", "wishbone", "woman", "wonder", "woodchuck", "writer", "yarrow", "zebra", "zephyr", "zeppelin", "legion", "otter", "exile", "gaffer", "marver", "glory", "order", "orix", "minnow", "saddle", "coffin", "jasper", "beryl", "onyx", "ruby"]
b = ["axe", "ale", "ant", "aunt", "awl", "bait", "band", "bank", "bath", "bay", "bead", "beam", "bean", "bear", "beard", "beast", "quill", "bell", "bells", "boar", "bird", "blade", "bliss", "blood", "board", "boat", "bone", "bones", "book", "boot", "boy", "braid", "branch", "brass", "bread", "brick", "brush", "cake", "dove", "cape", "chain", "chair", "chance", "cheese", "chief", "child", "chord", "city", "clam", "cliff", "clock", "cloth", "cloud", "clouds", "coach", "coast", "coat", "coats", "code", "cold", "cord", "corn", "cow", "cows", "crane", "crate", "crates", "cream", "crook", "cross", "crown", "day", "days", "dean", "death", "deer", "desk", "dime", "dog", "dogs", "doll", "dolls", "door", "doors", "dream", "dress", "drum", "duck", "ducks", "duke", "dune", "dunes", "dust", "ear", "earth", "east", "edge", "egg", "elf", "elves", "faith", "ham", "fang", "feast", "fern", "field", "fields", "fight", "flag", "flame", "flesh", "flint", "flock", "fog", "plum", "fox", "frame", "frog", "frost", "fruit", "gate", "geese", "ghost", "gin", "girl", "glass ", "ape", "goat", "goose", "geese", "grain", "grape", "grapes", "grass", "grouse", "gull", "gun", "hair", "hall", "hat", "hats", "heart", "hearth", "hen", "hill", "hills", "home", "hook", "hope", "horn", "horse", "hound", "iron", "jail", "jam", "jar", "jars", "joy", "judge",
     "kite", "kites", "knife", "knob", "knot", "lace", "lake", "lamb", "lamp", "light", "lights", "lime", "loaf", "loaves", "lock", "locks", "loom", "lunch", "maid", "map", "maps", "mask", "meat", "mice", "milk", "mint", "mole", "moles", "moth", "moon", "mouse", "nest", "north", "pail", "pails", "park", "parks", "pear", "pears", "pen", "pens", "pig", "pigs", "plaid", "queen", "quilt", "rain", "rake", "rat", "road", "roads", "rose", "roses", "rye", "sack", "sail", "sails", "salt", "scale", "scarf", "scarves", "sea", "seed", "shoe", "shoes", "silk", "sink", "sleet", "smoke", "snail", "snails", "snake", "snakes", "snow", "soap", "son", "sons", "song", "songs", "spark", "spools", "spool", "spoon", "spy", "spies", "stage", "star", "stars", "steel", "stone", "stones", "stove", "straw", "stream", "street", "string", "quince", "sun", "steam", "sword", "sage", "tern", "thief", "thieves", "thorn", "thread", "throne", "toad", "tomb", "tooth", "town", "tramp", "tree", "twig", "twine", "vase", "veil", "vein", "vest", "vine", "well", "whale", "wharf", "wharves", "wheel", "wine", "wing", "wings", "wire", "wish", "wolf", "wolves", "wood", "wool", "wren", "wrench", "wrist", "yard", "yarn", "plane", "adze", "cave", "loon", "pin", "pine", "fate", "hoof", "hooves", "skull", "block", "stamp", "chick", "hawk", "pearl", "sleigh", "peach", "lye"]


def get_business(desc=True):
    adj = random.choice(['new', 'tasty', 'trendy', 'modern', 'reliable', 'old, quiet',
                         'recently renovated', '', 'tranquil', 'fast casual', 'hole-in-the-wall', 'chic', 'cheap'])
    noun = random.choice(['climbing gym', 'restaurant', 'watering hole', 'stomping ground', 'fitness club', 'place', 'social club', 'lounge', 'salon',
                          'axe throwing bar', 'pottery studio', 'warehouse', 'coworking space', 'cafe', 'coffee shop', 'abandoned lot', 'talk of the town'])
    num = random.randrange(100)
    adjs = ['young', 'restless', 'adventurous', 'bold',
            'single', 'urban dweller', 'disaffected']
    detail = random.choice([
        f', that {adj} {noun} for the {random.choice(adjs)}',
        f', that {adj} {noun} for the {random.choice(adjs)} and {random.choice(adjs)}',
        f', the {adj} {noun}',
        f'',
        f', the {adj} {noun} on {num} St',
    ])
    if not desc:
        detail = ''
    return f"{random.choice(a).capitalize()} & {random.choice(b).capitalize()}{detail}"
